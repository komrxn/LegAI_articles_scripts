import requests
from bs4 import BeautifulSoup
import re
from datetime import datetime

codes = {
    "–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π –∫–æ–¥–µ–∫—Å p1": "https://lex.uz/ru/docs/111181",
    "–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π –∫–æ–¥–µ–∫—Å p2": "https://lex.uz/ru/docs/180550",
    "–£–≥–æ–ª–æ–≤–Ω—ã–π –∫–æ–¥–µ–∫—Å": "https://lex.uz/ru/docs/111457",
    "–°–µ–º–µ–π–Ω—ã–π –∫–æ–¥–µ–∫—Å": "https://lex.uz/ru/docs/104723",
    "–¢—Ä—É–¥–æ–≤–æ–π –∫–æ–¥–µ–∫—Å": "https://lex.uz/ru/docs/6257291",
    "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –∫–æ–¥–µ–∫—Å": "https://lex.uz/ru/docs/97661",
    "–ë—é–¥–∂–µ—Ç–Ω—ã–π –∫–æ–¥–µ–∫—Å": "https://lex.uz/ru/docs/2304140",
    "–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π –ø—Ä–æ—Ü–µ—Å—Å—É–∞–ª—å–Ω—ã–π –∫–æ–¥–µ–∫—Å": "https://lex.uz/ru/docs/3517334",
    "–ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏—è": "https://lex.uz/docs/35869",
    "–£–≥–æ–ª–æ–≤–Ω–æ-–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–¥–µ–∫—Å": "https://lex.uz/ru/docs/163627",
    "–¢–∞–º–æ–∂–µ–Ω–Ω—ã–π –∫–æ–¥–µ–∫—Å": "https://lex.uz/ru/docs/2876352",
    "–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ü–µ—Å—Å—É–∞–ª—å–Ω—ã–π –∫–æ–¥–µ–∫—Å": "https://lex.uz/ru/docs/3523895",
    "–ñ–∏–ª–∏—â–Ω—ã–π –∫–æ–¥–µ–∫—Å": "https://lex.uz/ru/docs/106134",
    "–ó–µ–º–µ–ª—å–Ω—ã–π –∫–æ–¥–µ–∫—Å": "https://lex.uz/ru/docs/149947",
    "–ù–∞–ª–æ–≥–æ–≤—ã–π –∫–æ–¥–µ–∫—Å": "https://lex.uz/ru/docs/4674893",
    "–ö–æ–¥–µ–∫—Å –æ–± –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–º —Å—É–¥–æ–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ": "https://lex.uz/ru/docs/3527365"
}

date_pattern = re.compile(r"\b\d{2}\.\d{2}\.\d{4}\b")
green_phrases = ["–∏–º–µ–µ—Ç—Å—è —Ä–µ–¥–∞–∫—Ü–∏—è, –Ω–µ –≤—Å—Ç—É–ø–∏–≤—à–∞—è –≤ —Å–∏–ª—É", "–≤—Å—Ç—É–ø–∏—Ç –≤ —Å–∏–ª—É", "–≤—Å—Ç—É–ø–∞–µ—Ç –≤ —Å–∏–ª—É —Å"]
red_phrases = ["–≤–Ω–æ—Å—è—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏—è", "–∞–∫—Ç –∏–∑–ª–æ–∂–µ–Ω –≤ –Ω–æ–≤–æ–π —Ä–µ–¥–∞–∫—Ü–∏–∏", "—É—Ç—Ä–∞—Ç–∏–ª —Å–∏–ª—É"]

print("üìò –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–µ–∫—Å–æ–≤ –Ω–∞ lex.uz\n")

for title, url in codes.items():
    try:
        r = requests.get(url)
        soup = BeautifulSoup(r.content, "html.parser")
        full_text = soup.get_text(separator=" ").lower()

        # –ü–æ–∏—Å–∫ –¥–∞—Ç—ã
        dates = date_pattern.findall(full_text)
        parsed = [datetime.strptime(d, "%d.%m.%Y") for d in dates]
        latest = max(parsed).strftime("%d.%m.%Y") if parsed else "‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"

        # –ü–æ–∏—Å–∫ –∑–∞–º–µ—Ç–æ–∫
        green_note = next((p for p in green_phrases if p in full_text), None)
        red_note = next((p for p in red_phrases if p in full_text), None)

        print(f"üìò {title}")
        print(f"üîó {url}")
        print(f"üïí –ü–æ—Å–ª–µ–¥–Ω—è—è –¥–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è: {latest}")
        if green_note:
            print(f"üü© –ó–∞–º–µ—Ç–∫–∞: {green_note}")
        if red_note:
            print(f"üü• –ó–∞–º–µ—Ç–∫–∞: {red_note}")
        if not (green_note or red_note):
            print("‚ÑπÔ∏è –ó–∞–º–µ—Ç–æ–∫ –Ω–µ—Ç")
        print("-" * 60)

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å {title}: {e}")
